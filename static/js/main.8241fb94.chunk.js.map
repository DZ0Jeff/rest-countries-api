{"version":3,"sources":["services/api.js","components/allFlags/index.js","components/flag/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","AllFlags","useState","countries","setCountries","country","setCountry","region","setRegion","useEffect","a","async","get","response","document","title","data","load","name","searchCountry","searchFlagByRegion","className","type","placeholder","onChange","e","target","value","map","key","numericCode","to","src","flag","alt","population","capital","FlagDetails","props","detailFlag","setDetailFlag","match","params","loadFlag","nativeName","toLocaleString","subregion","topLevelDomain","currencies","currency","languages","language","borders","border","router","history","createHistory","basename","process","exact","path","component","App","theme","setTheme","color","changeTheme","Switch","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8241fb94.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://restcountries.eu/rest/v2'\r\n})\r\n\r\nexport default api","import React,{ useEffect, useState } from 'react'\r\nimport api from '../../services/api'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './styles.css'\r\n\r\nexport default function AllFlags(){\r\n    const[countries, setCountries] = useState([])\r\n    const[country, setCountry] = useState('') \r\n    const[region, setRegion] = useState('')\r\n    \r\n\r\n    useEffect(() => {\r\n        async function load(){\r\n            const response = await api.get('/all')\r\n\r\n            document.title = 'Countries Api'\r\n            setCountries(response.data)\r\n        } \r\n        \r\n        load()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        async function searchCountry(name){\r\n            \r\n            let response\r\n            try {\r\n                response = await api.get(`/name/${name}`)\r\n            } catch {\r\n                response = await api.get(`/all`)\r\n            }\r\n\r\n            setCountries(response.data)\r\n        }   \r\n        \r\n        if(country !== ''){\r\n            searchCountry(country)\r\n        }\r\n    },[country])\r\n\r\n    useEffect(() => {\r\n        async function searchFlagByRegion(name){\r\n            \r\n            let response\r\n            try {\r\n                response = await api.get(`/region/${name}`)\r\n            } catch {\r\n                response = await api.get(`/all`)\r\n            }\r\n\r\n            setCountries(response.data)\r\n        }   \r\n        \r\n        if(region !== ''){\r\n            searchFlagByRegion(region)\r\n        }\r\n        \r\n    },[region])\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"options\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"box\" \r\n                    placeholder=\"search for a country...\"\r\n                    onChange={e => setCountry(e.target.value)}\r\n                />\r\n\r\n                <select name=\"countries\" className=\"box\" onChange={e => setRegion(e.target.value)}>\r\n                    <option value=\"filter\">Filter By Region</option>\r\n                    <option value=\"africa\">Africa</option>\r\n                    <option value=\"americas\">America</option>\r\n                    <option value=\"asia\">Asia</option>\r\n                    <option value=\"europe\">Europe</option>\r\n                    <option value=\"oceania\">Oceania</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flag-container\">\r\n                {countries.map(country => (\r\n                    <div className=\"flag\" key={country.numericCode}>\r\n                        <Link to={`/${country.name}`}>\r\n                            <img src={country.flag} alt={country.name}/>\r\n                        </Link>\r\n\r\n                        <div className=\"info\">\r\n                            <h3>{country.name}</h3>\r\n                            \r\n                            <p><strong>Region: </strong>{country.region}</p>\r\n                            <p><strong>Population: </strong>{country.population}</p>\r\n                            <p><strong>Capital: </strong>{country.capital}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React,{ useEffect, useState } from 'react'\r\nimport './style.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { MdKeyboardBackspace } from 'react-icons/md'\r\nimport api from '../../services/api'\r\n\r\nexport default function FlagDetails(props){\r\n    const[detailFlag, setDetailFlag] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function loadFlag(){\r\n            const { name } = props.match.params\r\n\r\n            const response = await api.get(`/name/${name}`)\r\n            setDetailFlag(response.data)\r\n        }\r\n\r\n        loadFlag()\r\n    }, [props.match.params])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"link-container\">\r\n                <Link to='/'>\r\n                    <button className=\"btn full\">\r\n                        <MdKeyboardBackspace className=\"icon\" />\r\n                        Voltar\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            {detailFlag.map(flag => (\r\n                <div className=\"flag-detail-container\" key={flag.name}>\r\n                    <img src={flag.flag} className=\"flag-image\" alt={flag.name}/>\r\n\r\n                    <div className=\"flag-detail\">\r\n                        <h2>{flag.name}</h2>\r\n                        \r\n                        <div className=\"flag-detail-info\">\r\n                            <div>\r\n                                <p><strong>Native name: </strong> {flag.nativeName}</p>\r\n                                <p><strong>Population: </strong> {flag.population.toLocaleString('pt-BR')}</p>\r\n                                <p><strong>Region: </strong>{flag.region} </p>\r\n                                <p><strong>Subregion: </strong>{flag.subregion}</p>\r\n                                <p><strong>Capital: </strong>{flag.capital}</p>\r\n                            </div>       \r\n        \r\n                            <div>\r\n                                <p><strong>Top level domain: </strong> {flag.topLevelDomain} </p>\r\n                                <p>\r\n                                    <strong>Currencies: </strong> \r\n                                    {flag.currencies.map(currency => (\r\n                                        <span key={currency.name}>{currency.name}</span>\r\n                                    ))}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Languagues: </strong> \r\n                                    {flag.languages.map(language => (\r\n                                        <span key={language.name}>{language.name}</span>\r\n                                    ))}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <nav className=\"btn-container\">\r\n                            <strong>Border contries: </strong> \r\n                            {flag.borders.map(border => (\r\n                                <span className=\"btn\"> {border} </span> \r\n                            ))}\r\n                        </nav>        \r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport createHistory from \"history/createBrowserHistory\";\r\n\r\nimport AllFlags from './components/allFlags'\r\nimport FlagDetails from \"./components/flag\";\r\n\r\nexport default function router(){\r\n    return(\r\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\r\n            <Switch>\r\n                <Route exact path='/' component={AllFlags}/>\r\n                <Route path='/:name' component={FlagDetails}/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Router from './routes'\r\n\r\nimport './App.css'\r\nimport './components/header/styles.css'\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(false)\r\n\r\n  const color = changeTheme(theme)\r\n\r\n  function changeTheme(theme){\r\n    const isDark = theme;\r\n    const color = isDark ? 'dark' : 'light'   \r\n    return color\r\n  }\r\n\r\n  return (\r\n    <div className={`app ${color}`}>\r\n      <header>\r\n        <h1>Where in the world?</h1>\r\n        <Switch\r\n          className=\"btn\" \r\n          color=\"primary\"\r\n          onChange={() => setTheme(!theme)} \r\n        />\r\n      </header>\r\n      \r\n      <Router />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}